{"version":3,"sources":["style.css","base/_reset.scss","base/_function.scss","base/_mixin.scss","parts/_header.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACAhB;;;;;;;;;;;;EAkBE,uBAAA;EAJA,SAAA;EAEA,eAAA;EAJA,SAAA;EAGA,UAAA;EAFA,UAAA;EAIA,wBAAA;ADGF;;ACAA;EACE,cAAA;ADGF;;ACDA;;EAEE,cAAA;ADIF;;ACFA;EACE,gBAAA;ADKF;;ACHA;EACE,YAAA;ADMF;;ACJA;;EAEE,WAAA;EACA,aAAA;ADOF;;ACLA;EAKE,uBAAA;EAFA,eAAA;EAFA,SAAA;EACA,UAAA;EAEA,wBAAA;ADSF;;ACNA;EACE,sBAAA;EACA,WAAA;EACA,qBAAA;ADSF;;ACPA;EACE,sBAAA;EACA,WAAA;EACA,kBAAA;EACA,iBAAA;ADUF;;ACRA;EACE,6BAAA;ADWF;;ACTA;EACE,yBAAA;EACA,YAAA;ADYF;;ACVA;EACE,yBAAA;EACA,iBAAA;ADaF;;ACXA;EAGE,SAAA;EACA,6BAAA;EAHA,cAAA;EACA,WAAA;EAGA,aAAA;EACA,UAAA;ADcF;;ACZA;EACE,sBAAA;ADeF;;AEzFA;;;;;;EAAA;AAWA;;;;;;;EAAA;AAYA;;;;;;;;;;EAAA;ACvBA;;;;;;;;;;;;EAAA;ACCA;EACE,mBAAA;AJkIF;AG1GM;ECzBN;IAGI,eAAA;EJoIF;AACF","file":"style.css","sourcesContent":["@charset \"UTF-8\";\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n  background: transparent;\n}\n\nbody {\n  line-height: 1;\n}\n\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, main {\n  display: block;\n}\n\nol, ul {\n  list-style: none;\n}\n\nblockquote, q {\n  quotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: \"\";\n  content: none;\n}\n\na {\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n  background: transparent;\n}\n\nins {\n  background-color: #ff9;\n  color: #333;\n  text-decoration: none;\n}\n\nmark {\n  background-color: #ff9;\n  color: #333;\n  font-style: italic;\n  font-weight: bold;\n}\n\ndel {\n  text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n  border-bottom: 1px dotted;\n  cursor: help;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nhr {\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid #cccccc;\n  margin: 1em 0;\n  padding: 0;\n}\n\ninput, select {\n  vertical-align: middle;\n}\n\n/**\n * 引数のfontSizeをremに変換する関数\n * @param fontSize フォントサイズ\n *\n * 例）18pxをremに変換\n * font-size: fz(18);\n */\n/**\n * 引数の最大画面サイズから指定されたpx数を元にvwに変換する関数\n * @param maxScreenSize 最大画面サイズ\n * @param px 変換するpx数\n * \n * 例）1440pxの幅に対して560pxの要素を可変させる\n * width: vw(1440, 560);\n */\n/**\n * 引数のfontSizeを元に指定されたpx数をemに変換する関数\n * @param px 変換するpx数\n * @param fontSize フォントサイズ\n *\n * 例）font-sizeが24pxの要素の下に80pxのmarginをem換算で設定する\n * margin-bottom: em(80, 24);\n * \n * font-sizeが16pxであれば第２引数は省略可能\n * margin-bottom: em(40);\n */\n/**\n * レスポンシブ\n * - sm:  480px〜\n * - md:  768px〜\n * - lg: 1024px〜\n * - xl: 1200px〜\n * - xxl: 1480px〜\n * \n * 例）\n * @include mq() { ... }\n * @include mq(xxl) { ... }\n * @include mq(sm, max) { ... }\n */\nbody {\n  font-size: 1.125rem;\n}\n@media screen and (max-width: 767px) {\n  body {\n    font-size: 1rem;\n  }\n}","html, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n  margin:0;\n  padding:0;\n  border:0;\n  outline:0;\n  font-size:100%;\n  vertical-align:baseline;\n  background:transparent;\n}\nbody {\n  line-height:1;\n}\narticle,aside,details,figcaption,figure,\nfooter,header,hgroup,menu,nav,section,main {\n  display:block;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes:none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content:\"\";\n  content:none;\n}\na {\n  margin:0;\n  padding:0;\n  font-size:100%;\n  vertical-align:baseline;\n  background:transparent;\n}\nins {\n  background-color:#ff9;\n  color:#333;\n  text-decoration:none;\n}\nmark {\n  background-color:#ff9;\n  color:#333;\n  font-style:italic;\n  font-weight:bold;\n}\ndel {\n  text-decoration: line-through;\n}\nabbr[title], dfn[title] {\n  border-bottom:1px dotted;\n  cursor:help;\n}\ntable {\n  border-collapse:collapse;\n  border-spacing:0;\n}\nhr {\n  display:block;\n  height:1px;\n  border:0;\n  border-top:1px solid #cccccc;\n  margin:1em 0;\n  padding:0;\n}\ninput, select {\n  vertical-align:middle;\n}","@use \"sass:math\";\n\n/**\n * 引数のfontSizeをremに変換する関数\n * @param fontSize フォントサイズ\n *\n * 例）18pxをremに変換\n * font-size: fz(18);\n */\n@function fz($fontSize) {\n  @return math.div($fontSize, 16) * 1rem;\n}\n\n/**\n * 引数の最大画面サイズから指定されたpx数を元にvwに変換する関数\n * @param maxScreenSize 最大画面サイズ\n * @param px 変換するpx数\n * \n * 例）1440pxの幅に対して560pxの要素を可変させる\n * width: vw(1440, 560);\n */\n@function vw($maxScreenSize, $px) {\n  @return (math.div($px, $maxScreenSize) * 100) * 1vw;\n}\n\n/**\n * 引数のfontSizeを元に指定されたpx数をemに変換する関数\n * @param px 変換するpx数\n * @param fontSize フォントサイズ\n *\n * 例）font-sizeが24pxの要素の下に80pxのmarginをem換算で設定する\n * margin-bottom: em(80, 24);\n * \n * font-sizeが16pxであれば第２引数は省略可能\n * margin-bottom: em(40);\n */\n@function em($px, $fontSize: 16) {\n  @return math.div($px, $fontSize) * 1em;\n}","@use \"sass:map\";\n\n/**\n * レスポンシブ\n * - sm:  480px〜\n * - md:  768px〜\n * - lg: 1024px〜\n * - xl: 1200px〜\n * - xxl: 1480px〜\n * \n * 例）\n * @include mq() { ... }\n * @include mq(xxl) { ... }\n * @include mq(sm, max) { ... }\n */\n $breakpoints: (\n  'sm': 480px,\n  'md': 768px,\n  'lg': 1024px,\n  'xl': 1200px,\n  'xxl': 1480px,\n) !default;\n\n@mixin mq($breakpoint: md, $type: min) {\n  @if map.has-key($breakpoints, $breakpoint) {\n    @if ($type == max) {\n      $width: map.get($breakpoints, $breakpoint);\n      $width: $width - 1;\n      @media screen and (max-width: #{$width}) {\n        @content;\n      }\n    } @else if($type == min) {\n      @media screen and (min-width: #{map.get($breakpoints, $breakpoint)}) {\n        @content;\n      }\n    }\n  }\n}","@use '../base/function';\n@use '../base/mixin';\n\nbody {\n  font-size: function.fz(18);\n  @include mixin.mq(md,max) {\n    font-size: function.fz(16);\n  }\n}"]}